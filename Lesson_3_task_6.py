# Для каждого упражнения написать программную реализацию.
# Код пишите в файлах с расширением .py в кодировке UTF-8 (в PyCharm работает по умолчанию).
# Каждую задачу необходимо сохранять в отдельный файл. Рекомендуем использовать английские имена,
# например, les_3_task_1, les_3_task_2 и т.д.
# Для оценки «Отлично» достаточно выполнить 5 любых задания на ваш выбор («Отлично» ставится за работы без ошибок).
# Например, если вы сдадите 8 заданий и 3 из них сделаны неверно, оценка не может быть отличной.

def generator_Array(lenArr=10, nStart=1, nEnd=100):
    tmpList = []
    for i in range(lenArr):
        tmpList.append(random.randint(nStart, nEnd))
    return tmpList



# 6. В одномерном массиве найти сумму элементов, находящихся между минимальным и максимальным элементами.
# Сами минимальный и максимальный элементы в сумму не включать.
import time

startTime = time.time()

print(
    '\nЗадание 6. В одномерном массиве найти сумму элементов, находящихся между минимальным и максимальным элементами. '
    'Сами минимальный и максимальный элементы в сумму не включать.')
list_1 = generator_Array(10, -10, 250)

mSum = 0

# print(f'Минимальный элемент {min(list_1)} его индекс {list_1.index(min(list_1))}')
# print(f'Максимальный элемент {max(list_1)} его индекс {list_1.index(max(list_1))}')
if list_1.index(min(list_1)) < list_1.index(max(list_1)):
    # print('min-max')
    for i in range(list_1.index(min(list_1)) + 1, list_1.index(max(list_1))):
        mSum += list_1[i]
else:
    # print('max-min')
    for i in range(list_1.index(max(list_1)) + 1, list_1.index(min(list_1))):
        mSum += list_1[i]
print(f'Массив данных: {list_1}')
print(f'Сумма элементов между минимальным и максимальным элементами равна: {mSum}')
print(f'Время выполнения кода: {(time.time() - startTime):.15f} секунд.')

